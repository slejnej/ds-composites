diff --git a/core/modules/media_library/src/Event/BuildUIEvent.php b/core/modules/media_library/src/Event/BuildUIEvent.php
new file mode 100644
index 0000000..af36c5f
--- /dev/null
+++ b/core/modules/media_library/src/Event/BuildUIEvent.php
@@ -0,0 +1,36 @@
+<?php
+
+namespace Drupal\media_library\Event;
+
+use Drupal\media_library\MediaLibraryState;
+
+class BuildUIEvent
+{
+
+  public const EVENT_NAME = 'media_library_build_ui';
+
+  public function __construct(public readonly MediaLibraryState $mediaLibraryState)
+  {
+  }
+
+  /**
+   * Update the list of allowed media types
+   * Also sets the selected media type if the allowed media type isn't available
+   *
+   * @param array $allowedTypeIds
+   * @return $this
+   */
+  public function setAllowedTypeIDs(array $allowedTypeIds): self
+  {
+    $this->mediaLibraryState->set('media_library_allowed_types', $allowedTypeIds);
+
+    // if the selected type isn't available, select the first allowed type
+    if(!in_array($this->mediaLibraryState->getSelectedTypeId(), $allowedTypeIds, true)) {
+      $this->mediaLibraryState->set('media_library_selected_type', reset($allowedTypeIds));
+    }
+
+    $this->mediaLibraryState->set('hash', $this->mediaLibraryState->getHash());
+    return $this;
+  }
+
+}
diff --git a/core/modules/media_library/src/MediaLibraryUiBuilder.php b/core/modules/media_library/src/MediaLibraryUiBuilder.php
index 47143fc..63ae998 100644
--- a/core/modules/media_library/src/MediaLibraryUiBuilder.php
+++ b/core/modules/media_library/src/MediaLibraryUiBuilder.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\media_library;
 
+use Drupal;
 use Drupal\Core\Access\AccessResult;
 use Drupal\Core\Form\FormBuilderInterface;
 use Drupal\Core\Form\FormState;
@@ -9,6 +10,7 @@
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Url;
+use Drupal\media_library\Event\BuildUIEvent;
 use Drupal\views\ViewExecutableFactory;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;
@@ -110,6 +112,11 @@ public function buildUi(MediaLibraryState $state = NULL) {
     if (!$state) {
       $state = MediaLibraryState::fromRequest($this->request);
     }
+
+    $event = new BuildUIEvent($state);
+    Drupal::service('event_dispatcher')->dispatch($event, BuildUIEvent::EVENT_NAME);
+
+
     // When navigating to a media type through the vertical tabs, we only want
     // to load the changed library content. This is not only more efficient, but
     // also provides a more accessible user experience for screen readers.
