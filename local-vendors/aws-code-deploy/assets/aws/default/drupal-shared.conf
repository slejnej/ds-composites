# Enable compression, this will help if you have for instance advagg? module
# by serving Gzip versions of the files.
gzip_static on;

location = /favicon.ico {
    log_not_found off;
    access_log off;
}

location ~ \..*/.*\.php$ {
    return 403;
}

# we should not be going there and it uses 300M+ memory
location = /admin/config/development/distro {
    return 301 /admin;
}

location / {
    # This is cool because no php is touched for static content
    try_files $uri @rewrite;
}

location @rewrite {
    # Clean URLs are handled in drupal_environment_initialize().
    rewrite ^ /index.php;
}

location ~ \.php$ {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;

    if (!-f $document_root$fastcgi_script_name) {
        return 404;
    }
    # This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

    include fastcgi_params;

    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass 127.0.0.1:9000;

    fastcgi_param PHP_VALUE "upload_max_filesize = 256M \n post_max_size=256M";
    fastcgi_read_timeout 1800;
}

location ~ ^/update.php {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    include fastcgi_params;

    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass 127.0.0.1:9000;

    fastcgi_index update.php;
}

# advagg_css and advagg_js support (Drupal advanced aggregation)
location ~* files/advagg_(?:css|js)/ {
    access_log  off;
    gzip_static on;
    access_log  off;
    expires     max;
    add_header  ETag "";
    add_header  Cache-Control "max-age=86400, no-transform, public, must-revalidate";
    try_files   $uri @rewrite;
}

# Fighting with Styles? This little gem is amazing.
location ~ ^/sites/.*/files/styles/ {
    try_files $uri @rewrite;
}

location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
    add_header Pragma no-cache;
    add_header  Cache-Control "max-age=43200, no-transform, public, must-revalidate";
    try_files $uri @rewrite;
    log_not_found off;
}

# Handle private files through Drupal.
location ~ ^/system/files/ {
    try_files $uri /index.php?$query_string;
}

location ^~ /sites/default/files/imagecache/ {
    index index.php index.html;

    # assume a clean URL is requested, and rewrite to index.php
    if (!-e $request_filename) {
        rewrite ^/(.*)$ /index.php?q=$1 last;
        break;
    }
}

location ~* ^/sites/(.*)/files/civicrm/(ConfigAndLog|templates_c|upload|custom) {
    deny all;
}

# make manifest available behind auth-basic
location ~ ^/themes/custom/(.*)/icons/site.webmanifest$ {
    auth_basic off;
}
